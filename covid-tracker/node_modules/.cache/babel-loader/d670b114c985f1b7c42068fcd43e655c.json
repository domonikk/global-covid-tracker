{"remainingRequest":"C:\\covid-tracker\\node_modules\\babel-loader\\lib\\index.js!C:\\covid-tracker\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\covid-tracker\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\covid-tracker\\src\\views\\Home.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\covid-tracker\\src\\views\\Home.vue","mtime":1628570972959},{"path":"C:\\covid-tracker\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\covid-tracker\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\covid-tracker\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\covid-tracker\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L2NvdmlkLXRyYWNrZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgRGF0YVRpdGxlIGZyb20gJ0AvY29tcG9uZW50cy9EYXRhVGl0bGUnOwppbXBvcnQgRGF0YUJveGVzIGZyb20gJ0AvY29tcG9uZW50cy9EYXRhQm94ZXMnOwppbXBvcnQgQ291bnRyeVNlbGVjdCBmcm9tICdAL2NvbXBvbmVudHMvQ291bnRyeVNlbGVjdCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSG9tZScsCiAgY29tcG9uZW50czogewogICAgRGF0YVRpdGxlOiBEYXRhVGl0bGUsCiAgICBEYXRhQm94ZXM6IERhdGFCb3hlcywKICAgIENvdW50cnlTZWxlY3Q6IENvdW50cnlTZWxlY3QKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsb2FkaW5nOiB0cnVlLAogICAgICB0aXRsZTogJ0dsb2JhbCcsCiAgICAgIGRhdGFEYXRlOiAnJywKICAgICAgc3RhdHVzOiB7fSwKICAgICAgY291bnRyaWVzOiBbXSwKICAgICAgbG9hZGluZ0ltYWdlOiByZXF1aXJlKCcuLi9hc3NldHMvaG91cmdsYXNzLmdpZicpCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgZmV0Y2hDb3ZpZERhdGE6IGZ1bmN0aW9uIGZldGNoQ292aWREYXRhKCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciByZXMsIGRhdGE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goJ2h0dHBzOi8vYXBpLmNvdmlkMTlhcGkuY29tL3N1bW1hcnknKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIGRhdGEgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgZGF0YSk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBnZXRDb3VudHJ5RGF0YTogZnVuY3Rpb24gZ2V0Q291bnRyeURhdGEoY291bnRyeSkgewogICAgICB0aGlzLnN0YXRzID0gY291bnRyeTsKICAgICAgdGhpcy50aXRsZSA9IGNvdW50cnkuQ291bnRyeTsKICAgIH0sCiAgICBDbGVhckNvdW50cnlEYXRhOiBmdW5jdGlvbiBDbGVhckNvdW50cnlEYXRhKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIGRhdGE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF90aGlzLmxvYWluZyA9IHRydWU7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuZmV0Y2hDb3ZpZERhdGEoKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgX3RoaXMudGl0bGUgPSAnR2xvYmFsJzsKICAgICAgICAgICAgICAgIF90aGlzLnN0YXRzID0gZGF0YS5HbG9iYWw7CiAgICAgICAgICAgICAgICBfdGhpcy5sb2FkaW5nID0gZmFsc2U7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgLy9saWZlIGN5Y2xlIG1ldGhvZAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgdmFyIGRhdGE7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX3RoaXMyLmxvYWRpbmcgPSB0cnVlOwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMyLmZldGNoQ292aWREYXRhKCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgIF90aGlzMi5kYXRhRGF0ZSA9IGRhdGEuRGF0ZTsKICAgICAgICAgICAgICBfdGhpczIuc3RhdHMgPSBkYXRhLkdsb2JhbDsKICAgICAgICAgICAgICBfdGhpczIuY291bnRyaWVzID0gZGF0YS5Db3VudHJpZXM7CiAgICAgICAgICAgICAgX3RoaXMyLmxvYWRpbmcgPSBmYWxzZTsKCiAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUzKTsKICAgIH0pKSgpOwogIH0KfTs="},{"version":3,"sources":["C:\\covid-tracker\\src\\views\\Home.vue"],"names":[],"mappings":";;;AAsBA,OAAO,SAAP,MAAsB,wBAAtB;AACA,OAAO,SAAP,MAAsB,wBAAtB;AACA,OAAO,aAAP,MAA0B,4BAA1B;AAEA,eAAe;AACb,EAAA,IAAI,EAAE,MADO;AAEb,EAAA,UAAU,EAAE;AACV,IAAA,SAAS,EAAT,SADU;AAEV,IAAA,SAAS,EAAT,SAFU;AAGV,IAAA,aAAY,EAAZ;AAHU,GAFC;AAOb,EAAA,IAPa,kBAOL;AACN,WAAO;AACL,MAAA,OAAO,EAAE,IADJ;AAEL,MAAA,KAAK,EAAE,QAFF;AAGL,MAAA,QAAQ,EAAE,EAHL;AAIL,MAAA,MAAM,EAAE,EAJH;AAKL,MAAA,SAAS,EAAC,EALL;AAML,MAAA,YAAY,EAAE,OAAO,CAAC,yBAAD;AANhB,KAAP;AAQD,GAhBY;AAkBb,EAAA,OAAO,EAAE;AACD,IAAA,cADC,4BACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACH,KAAK,CAAC,oCAAD,CADF;;AAAA;AACf,gBAAA,GADe;AAAA;AAAA,uBAGF,GAAG,CAAC,IAAJ,EAHE;;AAAA;AAGf,gBAAA,IAHe;AAAA,iDAId,IAJc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKtB,KANM;AAQP,IAAA,cARO,0BAQQ,OARR,EAQiB;AACtB,WAAK,KAAL,GAAa,OAAb;AACA,WAAK,KAAL,GAAa,OAAO,CAAC,OAArB;AACD,KAXM;AAaD,IAAA,gBAbC,8BAaiB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACtB,gBAAA,KAAI,CAAC,MAAL,GAAa,IAAb;AADsB;AAAA,uBAEH,KAAI,CAAC,cAAL,EAFG;;AAAA;AAEhB,gBAAA,IAFgB;AAGtB,gBAAA,KAAI,CAAC,KAAL,GAAa,QAAb;AACA,gBAAA,KAAI,CAAC,KAAL,GAAc,IAAI,CAAC,MAAnB;AACA,gBAAA,KAAI,CAAC,OAAL,GAAe,KAAf;;AALsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMxB;AAnBO,GAlBI;AAwCb;AACM,EAAA,OAzCO,qBAyCE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,cAAA,MAAI,CAAC,OAAL,GAAe,IAAf;AADa;AAAA,qBAEM,MAAI,CAAC,cAAL,EAFN;;AAAA;AAEP,cAAA,IAFO;AAGb,cAAA,MAAI,CAAC,QAAL,GAAgB,IAAI,CAAC,IAArB;AACA,cAAA,MAAI,CAAC,KAAL,GAAa,IAAI,CAAC,MAAlB;AACA,cAAA,MAAI,CAAC,SAAL,GAAiB,IAAI,CAAC,SAAtB;AACA,cAAA,MAAI,CAAC,OAAL,GAAe,KAAf;;AANa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOd;AAhDY,CAAf","sourcesContent":["<template>\n  <main v-if=\"!loading\">\n      <DataTitle :text=\"title\" :dataDate=\"dataDate\"/> \n      <DataBoxes :stats=\"stats\"/> \n      <CountrySelect  @get-country=\"getCountryData\" :countries='countries'/> \n\n      <button @click=\"ClearCountryData\"\n      v-if=\"stats.Country\"\n      class=\"bg-green-700 text-white rounded p-3 mt-10 focus:outline-none hover:bg-green-600\">Clear Country</button>\n  </main> \n\n  <main class=\"flex-column align-center justify-center text-center\" v-else> \n    <div class=\"text-gray-500 text-3xl mt-10 mb-6\"> \n      Fetching Data\n    </div> \n    <img :src=\"loadingImage\" class=\"w-24 m-auto\" alt=\"\" />\n  </main>\n</template>\n\n\n\n<script> \nimport DataTitle from '@/components/DataTitle' \nimport DataBoxes from '@/components/DataBoxes'  \nimport CountrySelect from '@/components/CountrySelect'\n\nexport default {\n  name: 'Home',\n  components: {\n    DataTitle, \n    DataBoxes, \n    CountrySelect\n  }, \n  data () {\n    return {\n      loading: true, \n      title: 'Global', \n      dataDate: '', \n      status: {}, \n      countries:[], \n      loadingImage: require('../assets/hourglass.gif'),\n    }\n  },\n\n  methods: { \n    async fetchCovidData() {\n      const res = await fetch('https://api.covid19api.com/summary') \n\n      const data = await res.json() \n      return data\n    },  \n\n    getCountryData(country) {\n      this.stats = country \n      this.title = country.Country\n    }, \n\n    async ClearCountryData(){\n      this.loaing= true \n      const data = await this.fetchCovidData() \n      this.title = 'Global' \n      this.stats =  data.Global \n      this.loading = false\n    }\n  }, \n\n  //life cycle method\n  async created(){ \n    this.loading = true\n    const data = await this.fetchCovidData() \n    this.dataDate = data.Date \n    this.stats = data.Global\n    this.countries = data.Countries \n    this.loading = false\n  },\n}\n</script>\n"],"sourceRoot":""}]}