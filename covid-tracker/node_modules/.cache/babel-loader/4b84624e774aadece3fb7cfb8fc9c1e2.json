{"remainingRequest":"C:\\covid-tracker\\node_modules\\babel-loader\\lib\\index.js!C:\\covid-tracker\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\covid-tracker\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\covid-tracker\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\covid-tracker\\src\\views\\Home.vue?vue&type=template&id=fae5bece","dependencies":[{"path":"C:\\covid-tracker\\src\\views\\Home.vue","mtime":1628570972959},{"path":"C:\\covid-tracker\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\covid-tracker\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\covid-tracker\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1628298225000},{"path":"C:\\covid-tracker\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\covid-tracker\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2ssIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCBjcmVhdGVFbGVtZW50Vk5vZGUgYXMgX2NyZWF0ZUVsZW1lbnRWTm9kZSB9IGZyb20gInZ1ZSI7CnZhciBfaG9pc3RlZF8xID0gewogIGtleTogMAp9Owp2YXIgX2hvaXN0ZWRfMiA9IHsKICBrZXk6IDEsCiAgY2xhc3M6ICJmbGV4LWNvbHVtbiBhbGlnbi1jZW50ZXIganVzdGlmeS1jZW50ZXIgdGV4dC1jZW50ZXIiCn07Cgp2YXIgX2hvaXN0ZWRfMyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCB7CiAgY2xhc3M6ICJ0ZXh0LWdyYXktNTAwIHRleHQtM3hsIG10LTEwIG1iLTYiCn0sICIgRmV0Y2hpbmcgRGF0YSAiLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfNCA9IFsic3JjIl07CmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF9jb21wb25lbnRfRGF0YVRpdGxlID0gX3Jlc29sdmVDb21wb25lbnQoIkRhdGFUaXRsZSIpOwoKICB2YXIgX2NvbXBvbmVudF9EYXRhQm94ZXMgPSBfcmVzb2x2ZUNvbXBvbmVudCgiRGF0YUJveGVzIik7CgogIHZhciBfY29tcG9uZW50X0NvdW50cnlTZWxlY3QgPSBfcmVzb2x2ZUNvbXBvbmVudCgiQ291bnRyeVNlbGVjdCIpOwoKICByZXR1cm4gISRkYXRhLmxvYWRpbmcgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJtYWluIiwgX2hvaXN0ZWRfMSwgW19jcmVhdGVWTm9kZShfY29tcG9uZW50X0RhdGFUaXRsZSwgewogICAgdGV4dDogJGRhdGEudGl0bGUsCiAgICBkYXRhRGF0ZTogJGRhdGEuZGF0YURhdGUKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsidGV4dCIsICJkYXRhRGF0ZSJdKSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfRGF0YUJveGVzLCB7CiAgICBzdGF0czogX2N0eC5zdGF0cwogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgWyJzdGF0cyJdKSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfQ291bnRyeVNlbGVjdCwgewogICAgb25HZXRDb3VudHJ5OiAkb3B0aW9ucy5nZXRDb3VudHJ5RGF0YSwKICAgIGNvdW50cmllczogJGRhdGEuY291bnRyaWVzCiAgfSwgbnVsbCwgOAogIC8qIFBST1BTICovCiAgLCBbIm9uR2V0Q291bnRyeSIsICJjb3VudHJpZXMiXSksIF9jdHguc3RhdHMuQ291bnRyeSA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImJ1dHRvbiIsIHsKICAgIGtleTogMCwKICAgIG9uQ2xpY2s6IF9jYWNoZVswXSB8fCAoX2NhY2hlWzBdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMuQ2xlYXJDb3VudHJ5RGF0YSAmJiAkb3B0aW9ucy5DbGVhckNvdW50cnlEYXRhLmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSksCiAgICBjbGFzczogImJnLWdyZWVuLTcwMCB0ZXh0LXdoaXRlIHJvdW5kZWQgcC0zIG10LTEwIGZvY3VzOm91dGxpbmUtbm9uZSBob3ZlcjpiZy1ncmVlbi02MDAiCiAgfSwgIkNsZWFyIENvdW50cnkiKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSldKSkgOiAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJtYWluIiwgX2hvaXN0ZWRfMiwgW19ob2lzdGVkXzMsIF9jcmVhdGVFbGVtZW50Vk5vZGUoImltZyIsIHsKICAgIHNyYzogJGRhdGEubG9hZGluZ0ltYWdlLAogICAgY2xhc3M6ICJ3LTI0IG0tYXV0byIsCiAgICBhbHQ6ICIiCiAgfSwgbnVsbCwgOAogIC8qIFBST1BTICovCiAgLCBfaG9pc3RlZF80KV0pKTsKfQ=="},{"version":3,"sources":["C:\\covid-tracker\\src\\views\\Home.vue"],"names":[],"mappings":";;;;;;AAWQ,EAAA,KAAK,EAAC;;;8BACV,mBAAA,CAEM,KAFN,EAEM;AAFD,EAAA,KAAK,EAAC;AAEL,CAFN,EAA+C,iBAA/C,EAEA,CAAA;AAAA;AAFA,C;;;;;;;;;;UAXW,KAAA,CAAA,O,kBAAb,mBAAA,CAQO,MARP,EAQO,UARP,EAQO,CAPH,YAAA,CAA+C,oBAA/C,EAA+C;AAAnC,IAAA,IAAI,EAAE,KAAA,CAAA,KAA6B;AAArB,IAAA,QAAQ,EAAE,KAAA,CAAA;AAAW,GAA/C,E,IAAA,E;;AAAA,I,oBAAA,CAOG,EANH,YAAA,CAA2B,oBAA3B,EAA2B;AAAf,IAAA,KAAK,EAAE,IAAA,CAAA;AAAQ,GAA3B,EAAwB,IAAxB,EAAwB;AAAA;AAAxB,IAAwB,CAAA,OAAA,CAAxB,CAMG,EALH,YAAA,CAAsE,wBAAtE,EAAsE;AAArD,IAAA,YAAW,EAAE,QAAA,CAAA,cAAwC;AAAvB,IAAA,SAAS,EAAE,KAAA,CAAA;AAAY,GAAtE,E,IAAA,E;;AAAA,I,6BAAA,CAKG,EAFG,IAAA,CAAA,KAAA,CAAM,O,kBADZ,mBAAA,CAE8G,QAF9G,EAE8G;UAAA;AAFrG,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,gBAAA,IAAA,QAAA,CAAA,gBAAA,OAAA,QAAA,YAAF;AAAA,KAAA,CAEgG;AAA9G,IAAA,KAAK,EAAC;AAAwG,GAF9G,EAEwF,eAFxF,C,qCAGG,CARP,C,mBAUA,mBAAA,CAKO,MALP,EAAA,UAAA,EAKO,CAJL,UAIK,EADL,mBAAA,CAAsD,KAAtD,EAAsD;AAAhD,IAAA,GAAG,EAAE,KAAA,CAAA,YAA2C;AAA7B,IAAA,KAAK,EAAC,aAAuB;AAAT,IAAA,GAAG,EAAC;AAAK,GAAtD,E,IAAA,E;;AAAA,I,UAAA,CACK,CALP,C","sourcesContent":["<template>\n  <main v-if=\"!loading\">\n      <DataTitle :text=\"title\" :dataDate=\"dataDate\"/> \n      <DataBoxes :stats=\"stats\"/> \n      <CountrySelect  @get-country=\"getCountryData\" :countries='countries'/> \n\n      <button @click=\"ClearCountryData\"\n      v-if=\"stats.Country\"\n      class=\"bg-green-700 text-white rounded p-3 mt-10 focus:outline-none hover:bg-green-600\">Clear Country</button>\n  </main> \n\n  <main class=\"flex-column align-center justify-center text-center\" v-else> \n    <div class=\"text-gray-500 text-3xl mt-10 mb-6\"> \n      Fetching Data\n    </div> \n    <img :src=\"loadingImage\" class=\"w-24 m-auto\" alt=\"\" />\n  </main>\n</template>\n\n\n\n<script> \nimport DataTitle from '@/components/DataTitle' \nimport DataBoxes from '@/components/DataBoxes'  \nimport CountrySelect from '@/components/CountrySelect'\n\nexport default {\n  name: 'Home',\n  components: {\n    DataTitle, \n    DataBoxes, \n    CountrySelect\n  }, \n  data () {\n    return {\n      loading: true, \n      title: 'Global', \n      dataDate: '', \n      status: {}, \n      countries:[], \n      loadingImage: require('../assets/hourglass.gif'),\n    }\n  },\n\n  methods: { \n    async fetchCovidData() {\n      const res = await fetch('https://api.covid19api.com/summary') \n\n      const data = await res.json() \n      return data\n    },  \n\n    getCountryData(country) {\n      this.stats = country \n      this.title = country.Country\n    }, \n\n    async ClearCountryData(){\n      this.loaing= true \n      const data = await this.fetchCovidData() \n      this.title = 'Global' \n      this.stats =  data.Global \n      this.loading = false\n    }\n  }, \n\n  //life cycle method\n  async created(){ \n    this.loading = true\n    const data = await this.fetchCovidData() \n    this.dataDate = data.Date \n    this.stats = data.Global\n    this.countries = data.Countries \n    this.loading = false\n  },\n}\n</script>\n"],"sourceRoot":""}]}